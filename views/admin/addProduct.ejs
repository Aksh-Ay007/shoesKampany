<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Product - Shoes Kampany</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"/>
    <style>
        .validation-message {
            color: red;
            font-size: 12px;
            display: none;
        }

        .preview-thumbnail {
            width: 100px;
            height: 100px;
            object-fit: cover;
            margin: 5px;
            position: relative;
        }

        .image-container {
            display: inline-block;
            position: relative;
        }

        .remove-image {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(255, 255, 255, 0.8);
            border: none;
            cursor: pointer;
            border-radius: 50%;
            padding: 2px 5px;
            font-size: 14px;
        }

        #cropModal {
            display: none;
            position: fixed;
            z-index: 1000;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        #cropModal img {
            max-width: 100%;
        }

        .modal-buttons {
            margin-top: 10px;
            text-align: center;
        }

        .modal-buttons button {
            margin: 0 10px;
        }
    </style>
    <style>
        body { font-family: 'Roboto', sans-serif; display: flex; min-height: 100vh; margin: 0; }
        #sidebar { width: 250px; background-color: #2c3e50; color: white; padding: 0; display: flex; flex-direction: column; position: fixed; top: 0; left: 0; bottom: 0; overflow-y: auto; box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1); }
        #sidebar-header { background-color: #1c2833; padding: 20px; text-align: center; }
        #sidebar h1 { font-size: 1.8rem; margin: 0; font-weight: 500; }
        #sidebar h2 { font-size: 1.2rem; margin: 10px 0 0; font-weight: 400; opacity: 0.8; }
        #sidebar ul { list-style: none; padding: 0; flex-grow: 1; margin: 0; }
        #sidebar li { margin: 0; }
        #sidebar a { color: #ecf0f1; text-decoration: none; display: flex; align-items: center; padding: 15px 20px; transition: background-color 0.3s, color 0.3s; font-size: 14px; font-weight: 500; }
        #sidebar a:hover { background-color: #34495e; color: #fff; }
        #sidebar a.active { background-color: #e74c3c; color: #fff; }
        #sidebar .material-icons { margin-right: 15px; font-size: 20px; }
        #content { flex: 1; padding: 30px; background-color: #ecf0f1; margin-left: 250px; }
        h1 { font-size: 28px; color: #4c0bbc; margin-bottom: 30px; }
        .breadcrumb { display: flex; align-items: center; margin-bottom: 20px; font-size: 14px; color: #2c3e50; position: sticky; top: 0; background-color: #ecf0f1; z-index: 10; padding: 10px 0; }
        .breadcrumb a { color: #3498db; text-decoration: none; }
        .breadcrumb a:hover { text-decoration: underline; }
        .breadcrumb .material-icons { font-size: 18px; margin: 0 5px; vertical-align: text-bottom; }
        .form-container { max-width: 800px; margin: 0 auto; background-color: white; border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); padding: 20px; }
        .form-label { font-size: 16px; font-weight: 500; margin-bottom: 8px; display: block; }
        .form-group {
            position: relative;
            margin-bottom: 20px;
        }

        .form-control {
            width: 100%;
            font-size: 16px;
            border: 1px solid #bdc3c7;
            border-radius: 4px;
            padding: 10px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
            outline: none;
        }

    

.form-control:invalid + .validation-message {
    display: block;
}



        #imagePreview { display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 10px; }
       
        .product-image { width: 100px; margin: 10px; cursor: pointer; }
       
        .toggle-button { font-family: 'Roboto', sans-serif; font-size: 14px; padding: 12px 20px; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s; color: white; background-color: #2ecc71; display: inline-flex; align-items: center; }
        .toggle-button:hover { background-color: #27ae60; }
        .toggle-button .material-icons { margin-right: 8px; font-size: 18px; }
        .cropper-modal .modal-dialog { max-width: 800px; margin: 1.75rem auto; }
        .cropper-container { max-height: 500px; overflow: hidden; }
        .cropper-view-box { outline-color: rgba(0, 0, 0, 0.75); }
        .cropper-face { background-color: rgba(255, 255, 255, 0.5); }
    </style>


</head>
<body>
    <nav id="sidebar">
        <div id="sidebar-header">
            <h1>Shoes Kampany</h1>
            <h2>Admin</h2>
        </div>
        <ul>
            <li><a href="/admin/dashboard" class="active"><i class="material-icons">dashboard</i> Dashboard</a></li>
            <li><a href="/category"><i class="material-icons">category</i> Category</a></li>
            <li><a href="/products" class="active"><i class="material-icons">inventory_2</i> Products</a></li>
            <li><a href="/admin/viewOrders"><i class="material-icons">shopping_cart</i> Orders</a></li>
            <li><a href="/admin/sales-report"><i class="material-icons">bar_chart</i> Sales Report</a></li>
            <li><a href="/allusers"><i class="material-icons">group</i> Users</a></li>
            <li><a href="/admin/couponmanage"><i class="material-icons">local_offer</i> Coupons</a></li>
            <li><a href="/admin/offermanage" ><i class="material-icons">local_offer</i> Offers</a></li>
            <li><a href="/logout"><i class="material-icons">logout</i> Logout</a></li>
        </ul>
    </nav>

    <div id="content">
        <div class="breadcrumb">
            <a href="/admin">Dashboard</a>
            <i class="material-icons">chevron_right</i>
            <a href="/products">Products</a>
            <i class="material-icons">chevron_right</i>
            <span>Add Product</span>
        </div>

        <h1>Add Product</h1>

        <div class="form-container">
            <form action="/admin/multproduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                <div class="form-group">
                    <label for="p_name" class="form-label">Product Name</label>
                    <input type="text" class="form-control" id="p_name" name="p_name" required>
                    <div class="validation-message" id="p_name_validation">Product Name is required</div>
                </div>
        
                <div class="form-group">
                    <label for="category" class="form-label">Category</label>
                    <select class="form-control" id="category" name="category" required>
                        <option value="">Select Category</option>
                        <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.categoryName %></option>
                        <% }); %>
                    </select>
                    <div class="validation-message" id="category_validation">Category is required</div>
                </div>
        
                <div class="form-group">
                    <label for="brand" class="form-label">Brand</label>
                    <input type="text" class="form-control" id="brand" name="brand" required>
                    <div class="validation-message" id="brand_validation">Brand is required</div>
                </div>
        
                <div class="form-group">
                    <label for="color" class="form-label">Color</label>
                    <input type="text" class="form-control" id="color" name="color" required>
                    <div class="validation-message" id="color_validation">Color is required</div>
                </div>
        
                <div class="form-group">
                    <label for="price" class="form-label">Price (â‚¹)</label>
                    <input type="number" class="form-control" id="price" name="price" min="0" required>
                    <div class="validation-message" id="price_validation">Price must be a positive value</div>
                </div>
        
                <div class="form-group">
                    <label for="discount" class="form-label">Discount (%)</label>
                    <input type="number" class="form-control" id="discount" name="discount" min="0" required>
                    <div class="validation-message" id="discount_validation">Discount must be a non-negative value</div>
                </div>
        
                <div class="form-group">
                    <label for="stock" class="form-label">Stock</label>
                    <input type="number" class="form-control" id="stock" name="stock" min="0" required>
                    <div class="validation-message" id="stock_validation">Stock must be a non-negative value</div>
                </div>
        
                <div class="form-group">
                    <label for="images" class="form-label">Images</label><br>
                    <div id="imagePreview"></div>
                    <input type="file" class="form-control" id="images" name="images" multiple required onchange="previewImages(event)">
                    <div class="validation-message" id="images_validation">Please upload at least one image</div>
                </div>
        
                <div class="form-group">
                    <label for="stat" class="form-label">Description</label>
                    <textarea class="form-control" id="stat" name="stat" required></textarea>
                    <div class="validation-message" id="stat_validation">Description cannot be empty</div>
                </div>
        
                <button type="submit" class="toggle-button add-button">
                    <i class="material-icons">add</i> Add Product
                </button>
            </form>
        </div>
        
        <!-- Crop Modal -->
        <div id="cropModal">
            <h2>Crop Image</h2>
            <div>
                <img id="cropImage" src="">
            </div>
            <div class="modal-buttons">
                <button onclick="cropImage()">Crop</button>
                <button onclick="closeCropModal()">Cancel</button>
            </div>
        </div>
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
        <script>
            let cropper;
            let currentImageElement;
        
            function previewImages(event) {
                const files = event.target.files;
                const preview = document.getElementById('imagePreview');
                preview.innerHTML = "";
        
                if (files.length > 4) {
                    alert("You can upload a maximum of 4 images.");
                    return;
                }
        
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const reader = new FileReader();
        
                    reader.onload = function(e) {
                        const imgContainer = document.createElement('div');
                        imgContainer.classList.add('image-container');
        
                        const img = document.createElement('img');
                        img.classList.add('preview-thumbnail');
                        img.src = e.target.result;
                        imgContainer.appendChild(img);
        
                        const removeBtn = document.createElement('button');
                        removeBtn.classList.add('remove-image');
                        removeBtn.innerHTML = '&times;';
                        removeBtn.onclick = function() {
                            imgContainer.remove();
                            updateFileInput();
                        };
                        imgContainer.appendChild(removeBtn);
        
                        img.onclick = function() {
                            openCropModal(img);
                        };
        
                        preview.appendChild(imgContainer);
                    };
        
                    reader.readAsDataURL(file);
                }
            }
        
            function openCropModal(imgElement) {
                const cropModal = document.getElementById('cropModal');
                const cropImage = document.getElementById('cropImage');
                cropImage.src = imgElement.src;
                currentImageElement = imgElement;
        
                cropModal.style.display = 'block';
        
                if (cropper) {
                    cropper.destroy();
                }
        
                cropper = new Cropper(cropImage, {
                    aspectRatio: 1,
                    viewMode: 2
                });
            }
        
            function closeCropModal() {
                const cropModal = document.getElementById('cropModal');
                cropModal.style.display = 'none';
                if (cropper) {
                    cropper.destroy();
                }
            }
        
            function cropImage() {
                const croppedCanvas = cropper.getCroppedCanvas();
                currentImageElement.src = croppedCanvas.toDataURL();
        
                closeCropModal();
                updateFileInput();
            }
        
            function updateFileInput() {
                const preview = document.getElementById('imagePreview');
                const images = preview.getElementsByClassName('preview-thumbnail');
        
                const dataTransfer = new DataTransfer();
        
                for (let i = 0; i < images.length; i++) {
                    const dataURL = images[i].src;
                    const file = dataURLtoFile(dataURL, 'image' + i + '.png');
                    dataTransfer.items.add(file);
                }
        
                document.getElementById('images').files = dataTransfer.files;
            }
        
            function dataURLtoFile(dataurl, filename) {
                const arr = dataurl.split(',');
                const mime = arr[0].match(/:(.*?);/)[1];
                const bstr = atob(arr[1]);
                let n = bstr.length;
                const u8arr = new Uint8Array(n);
                while (n--) {
                    u8arr[n] = bstr.charCodeAt(n);
                }
                return new File([u8arr], filename, { type: mime });
            }
        
            function validateForm() {
                var fields = [
                    { id: 'p_name', message: 'Product Name is required' },
                    { id: 'category', message: 'Category is required' },
                    { id: 'brand', message: 'Brand is required' },
                    { id: 'color', message: 'Color is required' },
                    { id: 'price', message: 'Price must be a positive value', type: 'number', min: 0 },
                    { id: 'discount', message: 'Discount must be a non-negative value', type: 'number', min: 0 },
                    { id: 'stock', message: 'Stock must be a non-negative value', type: 'number', min: 0 },
                    { id: 'images', message: 'Please upload at least one image' },
                    { id: 'stat', message: 'Description cannot be empty' }
                ];
        
                var isValid = true;
        
                fields.forEach(function(field) {
                    var element = document.getElementById(field.id);
                    var value = element.value.trim();
                    var errorElement = document.getElementById(field.id + '_validation');
                    errorElement.textContent = "";
        
                    if (value === "") {
                        errorElement.textContent = field.message;
                        errorElement.style.display = "block";
                        isValid = false;
                    } else {
                        errorElement.style.display = "none";
                        if (field.type === 'number') {
                            var num = parseFloat(value);
                            if (isNaN(num) || (field.min !== undefined && num < field.min)) {
                                errorElement.textContent = `Must be a valid number ${field.min !== undefined ? `greater than or equal to ${field.min}` : ''}`;
                                errorElement.style.display = "block";
                                isValid = false;
                            }
                        }
                    }
                });
        
                if (!isValid) return false;
        
                // Additional custom validations
                var images = document.getElementById('imagePreview').getElementsByClassName('preview-thumbnail');
                if (images.length === 0) {
                    document.getElementById('images_validation').textContent = "Please upload at least one image";
                    document.getElementById('images_validation').style.display = "block";
                    return false;
                } else {
                    document.getElementById('images_validation').style.display = "none";
                }
        
                return true;
            }
        </script>
        </body>
        </html>