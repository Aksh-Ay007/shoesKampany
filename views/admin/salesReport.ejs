<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Sales Report - Shoes Kampany</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <!-- Include jQuery and Bootstrap -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js" crossorigin="anonymous"></script>

    
   
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

   
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    
   <style>
    .ordered-items {
    margin-top: 10px;
}

.item {
    display: flex;
    align-items: center;
    margin-bottom: 5px;
    font-size: 14px;
    line-height: 1.5;
    color: #333; /* Adjust color as needed */
}

.item-name {
    flex-grow: 1;
}

.item-quantity {
    margin-left: 10px;
    color: #888; /* Adjust color as needed */
}

.pagination .btn {
    margin: 2px;
}

.custom-modal {
    width: 100%; /* Make the modal responsive */
    max-width: 800px; /* Maximum width */
}

.custom-modal .modal-body {
    max-height: 400px; /* Adjust the height to fit content */
    overflow-y: auto; /* Ensure content is scrollable if it exceeds the height */
}

.transaction-item {
    border: 1px solid #ddd; /* Add border to transaction items */
    padding: 10px; /* Add padding for better spacing */
    margin-bottom: 10px; /* Add margin between items */
    background-color: #f9f9f9; /* Optional: Add background color for better visibility */
}

.transaction-item p {
    margin: 0; /* Remove default margin */
    padding: 2px 0; /* Add padding for better readability */
}

.transaction-item strong {
    color: #333; /* Optional: Adjust text color for labels */
}

#sidebar {
    width: 250px;
    background-color: #2c3e50;
    color: white;
    padding: 0;
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    overflow-y: auto;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
}

#sidebar-header {
    background-color: #1c2833;
    padding: 20px;
    text-align: center;
}

#sidebar h1 {
    font-size: 1.8rem;
    margin: 0;
    font-weight: 500;
}

#sidebar h2 {
    font-size: 1.2rem;
    margin: 10px 0 0;
    font-weight: 400;
    opacity: 0.8;
}

#sidebar ul {
    list-style: none;
    padding: 0;
    flex-grow: 1;
    margin: 0;
}

#sidebar li {
    margin: 0;
}

#sidebar a {
    color: #ecf0f1;
    text-decoration: none;
    display: flex;
    align-items: center;
    padding: 15px 20px;
    transition: background-color 0.3s, color 0.3s;
    font-size: 14px;
    font-weight: 500;
}

#sidebar a:hover {
    background-color: #34495e;
    color: #fff;
}

#sidebar a.active {
    background-color: #e74c3c;
    color: #fff;
}

#sidebar .material-icons {
    margin-right: 15px;
    font-size: 20px;
}

#content {
    flex: 3;
    padding: 10px;
    background-color: #ecf0f1;
    margin-left: 250px; /* Adjusted to match sidebar width */
    transition: margin-left 0.3s ease;
    overflow-x: hidden; /* Ensures no horizontal overflow */
}

h1 {
    font-size: 28px;
    color: #4c0bbc;
    margin-bottom: 30px;
}

.breadcrumb {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    font-size: 14px;
    color: #2c3e50;
    position: sticky;
    top: 0;
    background-color: #ecf0f1;
    z-index: 10;
    padding: 10px 0;
}

.breadcrumb a {
    color: #3498db;
    text-decoration: none;
}

.breadcrumb a:hover {
    text-decoration: underline;
}

.breadcrumb .material-icons {
    font-size: 18px;
    margin: 0 5px;
    vertical-align: text-bottom;
}

.filters-container {
    background-color: white;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

.form-inline .form-group {
    margin-right: 10px;
    margin-bottom: 10px;
}

.form-control {
    font-size: 14px;
}

.stats-container {
    margin-bottom: 20px;
}

.stat-card {
    background-color: white;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    height: 100%;
}

.stat-card h3 {
    margin-bottom: 10px;
    font-size: 16px;
    color: #333;
}

.stat-card p {
    font-size: 18px;
    font-weight: bold;
    color: #3498db;
    margin: 0;
}
@media (max-width: 768px) {
    .form-inline {
        flex-direction: column;
        align-items: stretch;
    }
    
    .form-inline .form-group {
        margin-right: 0;
        margin-bottom: 10px;
    }
}

.btn {
    cursor: pointer;
    transition: background-color 0.3s;
}

.btn-primary {
    background-color: #3498db;
    color: white;
    border: none;
}

.btn-primary:hover {
    background-color: #2980b9;
}

.btn-success {
    background-color: #2ecc71;
    color: white;
    border: none;
    text-decoration: none;
    padding: 8px 12px;
    border-radius: 4px;
    display: inline-block;
}

.btn-success:hover {
    background-color: #27ae60;
}



.table-container {
    overflow-x: auto;
    max-height: 500px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 30px;
}

.table {
    width: 100%;
    border-collapse: collapse;
}

.table th,
.table td {
    text-align: left;
    padding: 15px;
    border-bottom: 1px solid #e0e0e0;
    white-space: nowrap;
}
.table-responsive {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}
.table th {
    background-color: #344955;
    color: white;
    font-weight: 500;
    position: sticky;
    top: 0;
    z-index: 1;
}

.table tbody tr:hover {
    background-color: #f0f0f0;
}

.pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.pagination .btn {
    margin: 0 5px;
}

.pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color .3s;
    border: 1px solid #ddd;
    margin: 0 4px;
}

.pagination a.active {
    background-color: #4CAF50;
    color: white;
    border: 1px solid #4CAF50;
}

.pagination a:hover:not(.active) {
    background-color: #ddd;
}

.pagination a.disabled {
    color: #ddd;
    pointer-events: none;
}

@media (max-width: 768px) {
    #sidebar {
        transform: translateX(-100%);
    }

    #sidebar.active {
        transform: translateX(0);
    }

    #content {
        margin-left: 0;
        width: 100%;
    }

    #sidebarToggle {
        display: block;
    }

    .table {
        font-size: 10px;
    }

    .table th,
    .table td {
        padding: 10px;
    }
    .table-header-report th{
        width: 50px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}

   </style>
</head>
<body>
    <!-- Your existing HTML structure -->

    <button id="sidebarToggle"><i class="material-icons">menu</i></button>

    <nav id="sidebar">
        <div id="sidebar-header">
            <h1>Shoes Kampany</h1>
            <h2>Admin</h2>
        </div>
      
        <ul>
            <li><a href="/admin/dashboard" ><i class="material-icons">dashboard</i> Dashboard</a></li>
            <li><a href="/admin/category"><i class="material-icons">category</i> Category</a></li>
            <li><a href="/admin/products"><i class="material-icons">inventory_2</i> Products</a></li>
            <li><a href="/admin/viewOrders"><i class="material-icons">shopping_cart</i> Orders</a></li>
            <li><a href="/admin/sales-report" class="active"><i class="material-icons">bar_chart</i> Sales Report</a></li>
            <li><a href="/admin/userside"><i class="material-icons">group</i> Users</a></li>
            <li><a href="/admin/couponmanage"><i class="material-icons">local_offer</i> Coupons</a></li>
            <li><a href="/admin/offermanage"><i class="material-icons">local_offer</i> Offers</a></li>
            <li><a href="/admin/adminLogout"><i class="material-icons">logout</i> Logout</a></li>
        </ul>
    </nav>
    <!-- ... -->
    <div id="content">
        <div class="breadcrumb">
            <a href="/admin">Dashboard</a>
            <i class="material-icons">chevron_right</i>
            <span>Sales Report</span>
        </div>
    
        <h1>Sales Report</h1>
    
        <div class="filters-container">
            <div class="row">
                <div class="col-md-8">
                    <form action="/admin/sales-report" method="get" class="form-inline">
                        <div class="form-group mr-2">
                            <select name="range" class="form-control">
                                <option value="">Select Range</option>
                                <option value="daily" <%= range === 'daily' ? 'selected' : '' %>>Daily</option>
                                <option value="weekly" <%= range === 'weekly' ? 'selected' : '' %>>Weekly</option>
                                <option value="monthly" <%= range === 'monthly' ? 'selected' : '' %>>Monthly</option>
                                <option value="yearly" <%= range === 'yearly' ? 'selected' : '' %>>Yearly</option>
                            </select>
                        </div>
                        <div class="form-group mr-2">
                            <input type="date" name="start" value="<%= startDate %>" class="form-control">
                        </div>
                        <div class="form-group mr-2">
                            <input type="date" name="end" value="<%= endDate %>" class="form-control">
                        </div>
                        <button type="submit" class="btn btn-primary">Filter</button>
                    </form>
                    
                </div>
                <div class="col-md-4 text-right">
                    <a href="/admin/generate-pdf-report<%= queryString %>" class="btn btn-success mr-2" target="_blank">
                        <i class="fas fa-download"></i> Download PDF
                    </a>
                    <button id="viewReturnedCanceledOrders" class="btn btn-secondary">View Returned and Canceled Orders</button>
                    
                </div>
            </div>
        </div>
    
        <div class="stats-container">
            <div class="row">
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="stat-card">
                        <h3>Total Sales</h3>
                        <p>₹<%= totalSales.toFixed(2) %></p>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="stat-card">
                        <h3>Total Coupons Discount</h3>
                        <p>₹<%= totalCoupons.toFixed(2) %></p>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="stat-card">
                        <h3>Total Offer Discount</h3>
                        <p>₹<%= totalOfferDiscount.toFixed(2) %></p>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="stat-card">
                        <h3>Total Orders</h3>
                        <p><%= totalSalesCount %></p>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="stat-card">
                        <h3>Total Canceled/Returned Orders</h3>
                        <p><%= totalCanceledReturnedCount %></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr class="table-header-report">
                        <th>Index</th>
                        <!-- <th>Status</th> -->
                        <th>User</th>
                        <th>Products</th>
                        <th>Total Amount</th>
                        <!-- <th>Coupon Discount</th>
                        <th>Offer Discount</th> -->
                        <th>Final Amount</th>
                        <th>Payment</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach((order, index) => { %>
                        <tr>
                            <td><%= (currentPage - 1) * limit + index + 1 %></td>
                            <!-- <td><%= order.status %></td> -->
                            <td><%= order.user_id.firstname %> <%= order.user_id.lastname %></td>
                            <td>
                                <div class="ordered-items">
                                    <% order.orderedItems.forEach(item => { %>
                                        <div class="item">
                                            <%= item.productname %> *<%= item.quantity %>
                                        </div>
                                    <% }); %>
                                </div>
                            </td>
                            <td>₹<%= order.totalAmount.toFixed(2) %></td>
                            <!-- <td>₹<%= order.couponDiscount.toFixed(2) %></td>
                            <td>₹<%= order.offerDiscount.toFixed(2) %></td> -->
                            <td>₹<%= order.finalAmount.toFixed(2) %></td>
                            <td><%= order.paymentMethod %></td>
                            <td>
                                <%= new Date(order.orderDate).toLocaleDateString() %><br>
                                <%= new Date(order.orderDate).toLocaleTimeString() %>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div class="pagination" id="salesReportPagination">
            <!-- Pagination will be rendered here by JavaScript -->
        </div>
    </div>

    <!-- Modal for Returned and Canceled Orders -->
<!-- Bootstrap CSS (ensure you have this included in your head section) -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<!-- Modal for Returned and Canceled Orders -->
<div class="modal fade" id="returnedCanceledOrdersModal" tabindex="-1" role="dialog" aria-labelledby="returnedCanceledOrdersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnedCanceledOrdersModalLabel">Returned and Canceled Orders</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="returnedCanceledOrdersContent">
                <!-- Content will be dynamically added here -->
            </div>
            <div class="modal-footer">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center" id="returnedCanceledOrdersPagination">
                        <!-- Pagination buttons will be dynamically added here -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>



<!-- Bootstrap JS and jQuery (ensure these are included at the end of your body section) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<!-- Your custom script for fetching and displaying orders in the modal -->
<script>
    $(document).ready(function() {
        console.log('Document ready.');

        // Function to fetch and display returned/canceled orders in modal
        function showReturnedCanceledOrders(pageNumber) {
            console.log('Fetching orders for page:', pageNumber);

            $.ajax({
                url: '/admin/returned-canceled-orders', // Replace with your actual server route
                method: 'GET',
                data: { page: pageNumber },
                dataType: 'json',
                success: function(response) {
                    console.log('AJAX request succeeded:', response);
                    const orders = response.orders;
                    const modalBody = $('#returnedCanceledOrdersContent');
                    modalBody.empty();

                    orders.forEach((order, index) => {
                        const html = `
                            <div class="transaction-item">
                                <p><strong>Status:</strong> ${order.status}</p>
                                <p><strong>User:</strong> ${order.user_id.firstname} ${order.user_id.lastname}</p>
                                <p><strong>Products:</strong> ${order.orderedItems.map(item => `<div class="item">${item.productname} * ${item.quantity}</div>`).join('')}</p>
                                <p><strong>Total Amount:</strong> ₹${order.totalAmount.toFixed(2)}</p>
                                <p><strong>Coupon Discount:</strong> ₹${order.couponDiscount.toFixed(2)}</p>
                                <p><strong>Offer Discount:</strong> ₹${order.offerDiscount.toFixed(2)}</p>
                                <p><strong>Final Amount:</strong> ₹${order.finalAmount.toFixed(2)}</p>
                                <p><strong>Payment:</strong> ${order.paymentMethod}</p>
                                <p><strong>Date:</strong> ${new Date(order.orderDate).toLocaleDateString()} ${new Date(order.orderDate).toLocaleTimeString()}</p>
                            </div>
                        `;
                        modalBody.append(html);
                    });

                    renderModalPagination(response.currentPage, response.totalPages);
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching returned/canceled orders:', error);
                    alert('Failed to fetch returned/canceled orders. Please try again.');
                }
            });
        }

        // Function to render pagination buttons for modal
        function renderModalPagination(currentPage, totalPages) {
            console.log('Rendering pagination:', currentPage, totalPages);
            const pagination = $('#returnedCanceledOrdersPagination');
            pagination.empty();

            // Previous button
            const prevButton = $('<li>', {
                class: 'page-item ' + (currentPage === 1 ? 'disabled' : ''),
                html: '<a class="page-link" href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a>',
                click: function() {
                    if (currentPage > 1) showReturnedCanceledOrders(currentPage - 1);
                }
            });
            pagination.append(prevButton);

            // Page numbers
            const windowSize = 3;
            let startPage = Math.max(1, currentPage - Math.floor(windowSize / 2));
            let endPage = Math.min(totalPages, startPage + windowSize - 1);
            if (endPage - startPage + 1 < windowSize) {
                startPage = Math.max(1, endPage - windowSize + 1);
            }
            for (let i = startPage; i <= endPage; i++) {
                const pageLink = $('<li>', {
                    class: 'page-item ' + (i === currentPage ? 'active' : ''),
                    html: `<a class="page-link" href="#">${i}</a>`,
                    click: function() {
                        showReturnedCanceledOrders(i);
                    }
                });
                pagination.append(pageLink);
            }

            // Next button
            const nextButton = $('<li>', {
                class: 'page-item ' + (currentPage === totalPages ? 'disabled' : ''),
                html: '<a class="page-link" href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></a>',
                click: function() {
                    if (currentPage < totalPages) showReturnedCanceledOrders(currentPage + 1);
                }
            });
            pagination.append(nextButton);
        }

        // Show returned/canceled orders modal
        $('#viewReturnedCanceledOrders').click(function() {
            console.log('View returned/canceled orders clicked.');
            showReturnedCanceledOrders(1);
            $('#returnedCanceledOrdersModal').modal('show');
        });
    });
</script>


<script>

    $(document).ready(function () {
        // Function to show page with selected range
        function showPageWithRange(selectedRange) {
            const url = new URL(window.location.href);
            url.searchParams.set('range', selectedRange);
            window.location.href = url.toString();
        }

        // On change of range selection, redirect with selected range
        $('select[name="range"]').change(function() {
            const selectedRange = $(this).val();
            showPageWithRange(selectedRange);
        });

        // Function to navigate to a specific page
        function showPage(pageNumber) {
            const url = new URL(window.location.href);
            url.searchParams.set('page', pageNumber);
            window.location.href = url.toString();
        }

        // Function to render pagination buttons for sales report
        function renderSalesReportPagination(currentPage, totalPages) {
            const pagination = $('#salesReportPagination');
            pagination.empty();

            // Previous button
            const prevButton = $('<button>', {
                class: 'btn btn-secondary',
                html: '<i class="fas fa-chevron-left"></i>',
                click: function() {
                    if (currentPage > 1) showPage(currentPage - 1);
                }
            });
            if (currentPage === 1) prevButton.prop('disabled', true);
            pagination.append(prevButton);

            // Page numbers
            const windowSize = 3;
            let startPage = Math.max(1, currentPage - Math.floor(windowSize / 2));
            let endPage = Math.min(totalPages, startPage + windowSize - 1);
            if (endPage - startPage + 1 < windowSize) {
                startPage = Math.max(1, endPage - windowSize + 1);
            }
            for (let i = startPage; i <= endPage; i++) {
                const pageLink = $('<button>', {
                    class: i === currentPage ? 'btn btn-primary' : 'btn btn-outline-primary',
                    text: i,
                    click: function() {
                        showPage(i);
                    }
                });
                pagination.append(pageLink);
            }

            // Next button
            const nextButton = $('<button>', {
                class: 'btn btn-secondary',
                html: '<i class="fas fa-chevron-right"></i>',
                click: function() {
                    if (currentPage < totalPages) showPage(currentPage + 1);
                }
            });
            if (currentPage === totalPages) nextButton.prop('disabled', true);
            pagination.append(nextButton);
        }

        // Initialize pagination for sales report
        renderSalesReportPagination(<%= currentPage %>, <%= totalPages %>);
    });

    $(document).ready(function() {
    console.log('Document ready.');

    // Function to fetch and display returned/canceled orders in modal
    function showReturnedCanceledOrders(pageNumber) {
        console.log('Fetching orders for page:', pageNumber);

        $.ajax({
            url: '/admin/returned-canceled-orders', // Replace with your actual server route
            method: 'GET',
            data: { page: pageNumber },
            dataType: 'json',
            success: function(response) {
                console.log('AJAX request succeeded:', response);
                const orders = response.orders;
                const modalBody = $('#returnedCanceledOrdersContent');
                modalBody.empty();

                orders.forEach((order, index) => {
                    const html = `
                        <div class="transaction-item">
                            <p><strong>Status:</strong> ${order.status}</p>
                            <p><strong>User:</strong> ${order.user_id.firstname} ${order.user_id.lastname}</p>
                            <p><strong>Products:</strong> ${order.orderedItems.map(item => `<div class="item">${item.productname} *${item.quantity}</div>`).join('')}</p>
                            <p><strong>Total Amount:</strong> ₹${order.totalAmount.toFixed(2)}</p>
                            <p><strong>Coupon Discount:</strong> ₹${order.couponDiscount.toFixed(2)}</p>
                            <p><strong>Offer Discount:</strong> ₹${order.offerDiscount.toFixed(2)}</p>
                            <p><strong>Final Amount:</strong> ₹${order.finalAmount.toFixed(2)}</p>
                            <p><strong>Payment:</strong> ${order.paymentMethod}</p>
                            <p><strong>Date:</strong> ${new Date(order.orderDate).toLocaleDateString()} ${new Date(order.orderDate).toLocaleTimeString()}</p>
                        </div>
                    `;
                    modalBody.append(html);
                });

                renderModalPagination(response.currentPage, response.totalPages);
            },
            error: function(xhr, status, error) {
                console.error('Error fetching returned/canceled orders:', error);
                alert('Failed to fetch returned/canceled orders. Please try again.');
            }
        });
    }

    // Function to render pagination buttons for modal
// Function to render pagination buttons for modal
function renderModalPagination(currentPage, totalPages) {
    console.log('Rendering pagination:', currentPage, totalPages);
    const pagination = $('#returnedCanceledOrdersPagination');
    pagination.empty();

    // Previous button
    const prevButton = $('<button>', {
        class: 'btn btn-secondary',
        text: 'Previous',
        click: function() {
            if (currentPage > 1) showReturnedCanceledOrders(currentPage - 1);
        }
    });
    if (currentPage === 1) prevButton.prop('disabled', true);
    pagination.append(prevButton);

    // Calculate start and end pages for pagination
    const windowSize = 2;
    let startPage = Math.max(1, currentPage - windowSize);
    let endPage = Math.min(totalPages, currentPage + windowSize);

    // Page numbers
    for (let i = startPage; i <= endPage; i++) {
        const pageLink = $('<button>', {
            class: i === currentPage ? 'btn btn-primary' : 'btn btn-outline-primary',
            text: i,
            click: function() {
                showReturnedCanceledOrders(i);
            }
        });
        pagination.append(pageLink);
    }

    // Next button
    const nextButton = $('<button>', {
        class: 'btn btn-secondary',
        text: 'Next',
        click: function() {
            if (currentPage < totalPages) showReturnedCanceledOrders(currentPage + 1);
        }
    });
    if (currentPage === totalPages) nextButton.prop('disabled', true);
    pagination.append(nextButton);
}

    // Show returned/canceled orders modal
    $('#viewReturnedCanceledOrders').click(function() {
        console.log('View returned/canceled orders clicked.');
        showReturnedCanceledOrders(1);
        $('#returnedCanceledOrdersModal').modal('show');
    });
});

</script>
    
<script>

    $(document).ready(function () {
    // Function to show page with selected range
    function showPageWithRange(selectedRange) {
        const url = new URL(window.location.href);
        url.searchParams.set('range', selectedRange);
        window.location.href = url.toString();
    }

    // On change of range selection, redirect with selected range
    $('select[name="range"]').change(function() {
        const selectedRange = $(this).val();
        showPageWithRange(selectedRange);
    });
});

</script>


</body>
</html>